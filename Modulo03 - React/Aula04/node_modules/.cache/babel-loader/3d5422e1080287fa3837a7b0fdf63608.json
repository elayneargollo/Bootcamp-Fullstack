{"ast":null,"code":"function leftPad(value, count = 2, char = '0') {\n  let newValue = value.toString();\n\n  if (value.toString.length < count) {\n    for (let i = 0; i < count - value.toString().length; i++) {\n      newValue = char + value.toString();\n    }\n  }\n\n  return newValue;\n}\n\nfunction getNewTimestamp() {\n  const now = new Date();\n  let result = '';\n  result += 'Data: ';\n  result += leftPad(now.getDate());\n  result += '/';\n  result += leftPad(now.getMonth() + 1);\n  result += '/';\n  result += leftPad(now.getFullYear());\n  result += ' ';\n  result += 'Hora: ';\n  result += leftPad(now.getHours());\n  result += ':';\n  result += leftPad(now.getMinutes());\n  result += ':';\n  result += leftPad(now.getSeconds());\n  result += '.';\n  result += leftPad(now.getMilliseconds(), 3);\n  return result;\n}\n\nexport { getNewTimestamp };","map":{"version":3,"sources":["/home/elayne/RepositorioGit/Bootcamp-Fullstack/Modulo03 - React/Aula04/react-projeto-base/src/Helpers/timestamp.js"],"names":["leftPad","value","count","char","newValue","toString","length","i","getNewTimestamp","now","Date","result","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","getMilliseconds"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,KAAjB,EAAwBC,KAAK,GAAG,CAAhC,EAAmCC,IAAI,GAAG,GAA1C,EAA8C;AAE1C,MAAIC,QAAQ,GAAGH,KAAK,CAACI,QAAN,EAAf;;AAEC,MAAGJ,KAAK,CAACI,QAAN,CAAeC,MAAf,GAAwBJ,KAA3B,EAAiC;AAC7B,SAAI,IAAIK,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAGL,KAAK,GAAGD,KAAK,CAACI,QAAN,GAAiBC,MAA1C,EAAkDC,CAAC,EAAnD,EAAsD;AAClDH,MAAAA,QAAQ,GAAGD,IAAI,GAAGF,KAAK,CAACI,QAAN,EAAlB;AACH;AACJ;;AAED,SAAOD,QAAP;AACH;;AAED,SAASI,eAAT,GAA0B;AAEtB,QAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AACA,MAAIC,MAAM,GAAG,EAAb;AAEAA,EAAAA,MAAM,IAAI,QAAV;AACAA,EAAAA,MAAM,IAAIX,OAAO,CAACS,GAAG,CAACG,OAAJ,EAAD,CAAjB;AACAD,EAAAA,MAAM,IAAI,GAAV;AACAA,EAAAA,MAAM,IAAIX,OAAO,CAACS,GAAG,CAACI,QAAJ,KAAiB,CAAlB,CAAjB;AACAF,EAAAA,MAAM,IAAI,GAAV;AACAA,EAAAA,MAAM,IAAIX,OAAO,CAACS,GAAG,CAACK,WAAJ,EAAD,CAAjB;AACAH,EAAAA,MAAM,IAAI,GAAV;AACAA,EAAAA,MAAM,IAAI,QAAV;AACAA,EAAAA,MAAM,IAAIX,OAAO,CAACS,GAAG,CAACM,QAAJ,EAAD,CAAjB;AACAJ,EAAAA,MAAM,IAAI,GAAV;AACAA,EAAAA,MAAM,IAAIX,OAAO,CAACS,GAAG,CAACO,UAAJ,EAAD,CAAjB;AACAL,EAAAA,MAAM,IAAI,GAAV;AACAA,EAAAA,MAAM,IAAIX,OAAO,CAACS,GAAG,CAACQ,UAAJ,EAAD,CAAjB;AACAN,EAAAA,MAAM,IAAI,GAAV;AACAA,EAAAA,MAAM,IAAIX,OAAO,CAACS,GAAG,CAACS,eAAJ,EAAD,EAAuB,CAAvB,CAAjB;AAEA,SAAOP,MAAP;AAEH;;AAED,SAAQH,eAAR","sourcesContent":["function leftPad(value, count = 2, char = '0'){\n    \n    let newValue = value.toString();\n     \n     if(value.toString.length < count){\n         for(let i=0; i < count - value.toString().length; i++){\n             newValue = char + value.toString();\n         }\n     }\n \n     return newValue;\n }\n \n function getNewTimestamp(){\n \n     const now = new Date();\n     let result = '';\n \n     result += 'Data: '\n     result += leftPad(now.getDate());\n     result += '/';\n     result += leftPad(now.getMonth() + 1);\n     result += '/';\n     result += leftPad(now.getFullYear());\n     result += ' ';\n     result += 'Hora: '\n     result += leftPad(now.getHours());\n     result += ':';\n     result += leftPad(now.getMinutes());\n     result += ':';\n     result += leftPad(now.getSeconds());\n     result += '.';\n     result += leftPad(now.getMilliseconds(),3);\n \n     return result;\n \n }\n\n export {getNewTimestamp};"]},"metadata":{},"sourceType":"module"}