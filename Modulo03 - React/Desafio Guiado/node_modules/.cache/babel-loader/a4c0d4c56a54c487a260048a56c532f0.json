{"ast":null,"code":"var _jsxFileName = \"/home/elayne/CursoIGIT/Desafio Guiado/src/App.js\";\nimport React, { Component } from 'react';\nimport Countries from './components/countries/Countries';\nimport Header from './components/header/Header';\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.calculateTotalPopulationFrom = countreis => {\n      const filteredPopulation = countreis.reduce((accumulator, current) => {\n        return accumulator + current.population;\n      }, 0);\n      return filteredPopulation;\n    };\n\n    this.handleChangeFilter = newFilter => {\n      this.setState({\n        filter: newFilter\n      });\n      const filterLowerCase = newFilter.toLowerCase();\n      const filteredCountries = this.state.allCountries.filter(country => {\n        return country.filterName.includes(filterLowerCase);\n      });\n      const filteredPopulation = filteredCountries.reduce((accumulator, current) => {\n        return accumulator + current.population;\n      }, 0);\n      this.setState({\n        filteredCountries,\n        filteredPopulation\n      });\n    };\n\n    this.state = {\n      allCountries: [],\n      filteredCountries: [],\n      filteredPopulation: 0,\n      filter: ''\n    };\n  }\n\n  async componentDidMount() {\n    const res = await fetch('https://restcountries.eu/rest/v2/all');\n    const json = await res.json();\n    const allCountries = json.map(({\n      name,\n      numericCode,\n      flag,\n      population\n    }) => {\n      return {\n        id: numericCode,\n        name,\n        filterName: name.toLowerCase(),\n        flag,\n        population\n      };\n    });\n    this.setState({\n      allCountries,\n      filteredCountries: Object.assign([], allCountries),\n      filteredPopulation\n    });\n  }\n\n  render() {\n    const {\n      filteredCountries,\n      filter,\n      filteredPopulation\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, \"React Countries\"), /*#__PURE__*/React.createElement(Header, {\n      filter: filter,\n      totalPopulation: filteredPopulation,\n      countryCount: filteredCountries.length,\n      onChangeFilter: this.handleChangeFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Countries, {\n      countries: filteredCountries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/elayne/CursoIGIT/Desafio Guiado/src/App.js"],"names":["React","Component","Countries","Header","App","constructor","calculateTotalPopulationFrom","countreis","filteredPopulation","reduce","accumulator","current","population","handleChangeFilter","newFilter","setState","filter","filterLowerCase","toLowerCase","filteredCountries","state","allCountries","country","filterName","includes","componentDidMount","res","fetch","json","map","name","numericCode","flag","id","Object","assign","render","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Countries from './components/countries/Countries';\nimport Header from './components/header/Header';\n\nexport default class App extends Component {\n\n  constructor(){\n    super();\n\n    this.state = {\n      allCountries: [],\n      filteredCountries: [],\n      filteredPopulation: 0,\n      filter: ''\n    }\n  }\n\n  async componentDidMount(){\n\n    const res = await fetch (\n      'https://restcountries.eu/rest/v2/all'\n    );\n\n    const json = await res.json();\n\n    const allCountries = json.map(({name, numericCode, flag, population}) => {\n        return {\n          id: numericCode,\n          name,\n          filterName : name.toLowerCase(),\n          flag,\n          population,\n        };\n    });\n\n\n\n    this.setState ({\n      allCountries,\n      filteredCountries: Object.assign([], allCountries),\n      filteredPopulation,\n    });\n\n  }\n\n  calculateTotalPopulationFrom = (countreis) => {\n    const filteredPopulation = countreis.reduce((accumulator, current) => {\n      return accumulator + current.population;\n    },0);\n\n    return filteredPopulation;\n  }\n\n  handleChangeFilter = (newFilter) =>{\n\n    this.setState({\n      filter: newFilter,\n    });\n\n    const filterLowerCase = newFilter.toLowerCase();\n\n    const filteredCountries= this.state.allCountries.filter(country => {\n      return country.filterName.includes(filterLowerCase);\n    });\n\n    const filteredPopulation = filteredCountries.reduce((accumulator, current) => {\n      return accumulator + current.population;\n    },0);\n\n    this.setState ({\n      filteredCountries,\n      filteredPopulation,\n    })\n\n  }\n  \n  render() {\n\n    const {filteredCountries, filter, filteredPopulation} = this.state;\n\n    return (\n      \n    <div className='container'>\n      <h1>React Countries</h1>\n        <Header filter={filter} totalPopulation={filteredPopulation} countryCount={filteredCountries.length} onChangeFilter={this.handleChangeFilter}/>\n        <Countries countries={filteredCountries}/>\n     </div>\n\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}